name: Run test from custom event
on:
  repository_dispatch:
    types: [run-test-event]
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - name: Checkout test repo  
      uses: actions/checkout@v2
      with:
        repository: ${{ github.event.client_payload.test_repo_name }}
        token: ${{secrets.GIT_HUB_TOKEN}}
    - name: Checkout action repo
      uses: actions/checkout@v2
      with:
        path: __runner  
    - name: checkout source from ${{ github.event.client_payload.repo_name }}
      uses: actions/checkout@v2
      with:
        repository: ${{ github.event.client_payload.repo_name }}
        path: __source
        ref: ${{ github.event.client_payload.body.after }}
        token: ${{secrets.GIT_HUB_TOKEN}}
    - name: configure node 
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - run: npm install 
    - run: npm test
    - run: npm run lint
      env:
        CI: true
        
    - run: node __runner/prepareReport.js
      env:
        HEAD_COMMIT: ${{  toJson(github.event.client_payload.body.head_commit) }}
        TEST_REPO_NAME: ${{ github.event.client_payload.test_repo_name }}
        REPO_NAME: ${{ github.event.client_payload.repo_name }}
        USERNAME: ${{ github.event.client_payload.username }}
    - name: Read report
      id : package
      uses: juliangruber/read-file-action@v1
      with: 
        path: ./report-with-meta.json
           
    - name: Post results back to the server.
      uses: CamiloGarciaLaRotta/watermelon-http-client@v1
      id : request 
      with:
        url: ${{secrets.SERVER_URL}}
        method: post
        headers: '{ "Content-Type": "application/json" }'
        data: ${{ steps.package.outputs.content }}
        
    - name: Print the response status
      run: echo ${{ steps.request.outputs.status }}
      shell: bash
